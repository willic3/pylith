[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#         ----------
#         |        |
# Ux=-a   |        | Ux=+a
#         |        |
#         |        |
#         ----------
#            Uy=0
#
# Dirichlet boundary conditions
#
# boundary_yneg: Uy(x,-16*km) = 0
# boundary_xneg: Ux(-6*km,y) = -a
# boundary_xpos: Uy(+6*km,y) = +a
base = [pylithapp.cfg]
description = Axial extension using Dirichlet boundary conditions.
authors = [Brad Aagaard]
keywords = [axial extension]
arguments = [step01_axialdisp.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation,
    ILU preconditioner,
    pylith.bc.DirichletTimeDependent,
    spatialdata.spatialdb.ZeroDB
    ]

[pylithapp]
# File with version information and parameters (including defaults).
#
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step01_axialdisp-parameters.json
problem.progress_monitor.filename = output/step01_axialdisp-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step01_axialdisp

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem.solution.subfields.displacement]
# The solution has uniform strain, so displacement field is linear, so
# basis order of 1 should give exact solution.
basis_order = 1

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# We have three Dirichlet boundary conditions as described above.
bc = [bc_xneg, bc_xpos, bc_yneg]
bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_xpos = pylith.bc.DirichletTimeDependent
bc.bc_yneg = pylith.bc.DirichletTimeDependent

[pylithapp.problem.bc.bc_xpos]
# Set Ux=+2.0*m on the +x boundary.
constrained_dof = [0]
label = boundary_xpos

# The spatial database must contain both components even though we do
# not constrain the y component.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on +x boundary
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
db_auxiliary_field.data = [+2.0*m, 0*m]

[pylithapp.problem.bc.bc_xneg]
constrained_dof = [0]
label = boundary_xneg

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on -x boundary
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
db_auxiliary_field.data = [-2.0*m, 0*m]

[pylithapp.problem.bc.bc_yneg]
constrained_dof = [1]
label = boundary_yneg

db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -y boundary


# End of file
